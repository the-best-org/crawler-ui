name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: asazanoff/crawler-ui
  USERNAME: asazanoff
  TEST_TAG: test

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        uses: docker/login-action@v3.0.0
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: # optional
          # Username used to log against the Docker registry
          username: ${{ env.USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKERHUBTOKEN }}
          # Specifies whether the given registry is ECR (auto, true or false)
          ecr: auto # optional, default is auto
          # Log out from the Docker registry at the end of a job
          logout: true # optional, default is true

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Test image
        id: build-test-image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: .
          load: true
          file: ./Dockerfile-test
          tags: ${{ steps.meta.outputs.tags }}
      
      - name: Test image
        id: test-image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker run --rm ${{ steps.meta.outputs.tags }} \
          -e MONGO=${{ vars.MONGOADDRESS }} \
          -e MONGO_PORT=${{ vars.MONGOPORT }}
      
      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      #  is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
